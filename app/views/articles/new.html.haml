%h2= @article.new_record? ? (t '.new_article') : (t '.edit_article')

- if @article.errors.any?
  .errors
    %h3= t 'activerecord.errors.template.header', :count => @article.errors.size, :model => Article.model_name.human
    %ul
      - @article.errors.full_messages.each do |msg|
        %li= msg

= form_for nest_image(@article), :html => { :multipart => true } do |article_form|
  %div.article_new
    - if article_form.object.image
      %img.asset{ :src => @article.image }
    %div.search_results
      %ul#search_results
    %div
      %div
        %span.label_width= article_form.label( 'active', Article.human_attribute_name(:active))
        %span.input_fields= article_form.check_box :menucard
      %span.label_width= article_form.label( 'name', Article.human_attribute_name(:name))
      %span.input_fields
        = article_form.text_field :name, :onkeypress => 'enable_articles_search = true;', :onchange => 'enable_articles_search = true;'
        %span#article_name_display_keyboard.display_keyboard
        %span.spinner
          %img{ :id => 'spinner', :src => '/images/ajax-loader.gif', :style => 'display:none;' }
    %div
      %span.label_width= article_form.label('description', Article.human_attribute_name(:description))
      %span.input_fields
        = article_form.text_field :description
        %span#article_description_display_keyboard.display_keyboard

    - if not @article.quantities.collect{ |q| q.hidden }.include? false
      %div
        %span.label_width= article_form.label('price', Article.human_attribute_name(:price))
        %span.input_fields
          = article_form.text_field( :price, :size => 6 )
          %span#article_price_display_keyboard.display_keyboard

    %div
      %span.label_width= article_form.label('category_id', Article.human_attribute_name(:category))
      %span.input_fields
        = article_form.collection_select :category_id, @categories, :id, :name, { :include_blank => true }
    
    %div
      = article_form.fields_for :images do |image_form|
        %span.label_width= image_form.label('image', Article.human_attribute_name(:image))
        %span.input_fields
          = image_form.file_field :file_data, :size => 15

    %div
      %span.label_width
      %span= link_to image_tag('button_small_delete.png', :title => Article.human_attribute_name(:hidden), :alt => Article.human_attribute_name(:hidden)), article_path(article_form.object), :method => :delete, :confirm => t(:are_you_sure), :class => 'delete' unless article_form.object.new_record?


  %div.add_quantity
    %a#add_quantity= t '.add_quantity'

  %ul#quantities_new
    = article_form.fields_for :quantities, article_form.object.quantities.active_and_sorted do |quantity_form|
      = quantity_form.hidden_field :hidden
      = render :partial => 'quantity', :locals => { :f => quantity_form } unless quantity_form.object.hidden
  %script== var quantity_template = '#{ generate_template(article_form, :quantities) }'

  %div= submit_tag( controller.action_name == 'new' ? (t :create) : (t :edit) )

:javascript

  var enable_articles_search = false;

  window.setInterval(
    function() {
      if (enable_articles_search == true) {
        enable_articles_search = false;
        $.ajax({
          type: 'POST',
          url: '/articles/find',
          data: 'articles_search_text=' + $('#article_name').val()
        });
      }
    }
  , 2000);

  $('#article_name').keyboard( {openOn: '', accepted: function(){ enable_articles_search = true } } );
  $('#article_name_display_keyboard').click(function(){
    $('#article_name').getkeyboard().reveal();
  });

  $('#article_description').keyboard( {openOn: '' } );
  $('#article_description_display_keyboard').click(function(){
    $('#article_description').getkeyboard().reveal();
  });

  $('#article_price').keyboard( {openOn: '', layout: 'num'} );
  $('#article_price_display_keyboard').click(function(){
    $('#article_price').getkeyboard().reveal();
  });

  $('#add_quantity').click(function(){
    var new_quantity_id = new Date().getTime();
    $('#quantities_new').append(quantity_template.replace(/NEW_RECORD/g, 'new_' + new_quantity_id));
    $('#article_quantities_attributes_new_' + new_quantity_id + '_prefix').keyboard( {openOn: '' } );
    $('#article_quantities_attributes_new_' + new_quantity_id + '_prefix_display_keyboard').click(function(){
      $('#article_quantities_attributes_new_' + new_quantity_id + '_prefix').getkeyboard().reveal();
    });
  });

  $(document).ready(function(){
    $('#quantities_new').sortable({
      axis: 'y',
      dropOnEmpty: false,
      handle: '.handle',
      cursor: 'crosshair',
      items: 'li',
      opacity: 0.4,
      scroll: true,
      update: function(){
        $.ajax({
          type: 'post',
          data: $('#quantities_new').sortable('serialize'),
          dataType: 'script',
          url: '/quantities/sort'
        })
      }
    });
  });
