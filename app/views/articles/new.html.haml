%h2= @article.new_record? ? (t '.new_article') : (t '.edit_article')

- if @article.errors.any?
  .errors
    %h3= t 'activerecord.errors.template.header', :count => @tax.errors.size, :model => Tax.model_name.human
    %ul
      - @article.errors.full_messages.each do |msg|
        %li= msg

= form_for @article do |article_form|
  %table.article_new
    %tr
      %td
        %table
          %tr
            %td.labels= article_form.label( 'name', Article.human_attribute_name(:name))
            %td.input_fields= article_form.text_field :name
            %td.spinner
              %img{ :id => 'spinner', :src => '/images/ajax-loader.gif', :style => 'display:none;' }
          %tr
            %td= article_form.label('description', Article.human_attribute_name(:description))
            %td= article_form.text_field :description
          - if article_form.object.quantities.empty?    
            %tr
              %td= article_form.label('price', Article.human_attribute_name(:price))
              %td= article_form.text_field( :price, :size => 6 )

          %tr
            %td= article_form.label('category_id', Article.human_attribute_name(:category))
            %td= article_form.collection_select :category_id, Category.find(:all), :id, :name, { :include_blank => true }
          %tr
            %td= article_form.label :usage, Quantity.human_attribute_name(:usage)
            %td
              %select{ :id => "article_usage", :name => "article[usage]" }
                %option{ :value => 'a', :selected => article_form.object.usage == 'a' } normal
                %option{ :value => 'b', :selected => article_form.object.usage == 'b' } mitnehmen
                %option{ :value => 'c', :selected => article_form.object.usage == 'c' } abwiegen
          %tr
            %td= article_form.label('menucard', Article.human_attribute_name(:menucard))
            %td= article_form.check_box :menucard
          %tr
            %td= article_form.label('hidden', Article.human_attribute_name(:hidden))
            %td= article_form.check_box :hidden
          %tr
            %td{ :colspan => '2' }
      %td#articles_search_results



  %h3= t('activerecord.models.quantity.other')
  %table#quantities_new
    - article_form.fields_for :quantities do |quantity_form|
      - next if quantity_form.object.hidden
      - quantitynumber = /article\[quantities_attributes\]\[(.*)\]/.match(quantity_form.object_name)[1]
      %tr
        %td= quantity_form.label :prefix, Quantity.human_attribute_name(:prefix)
        %td= quantity_form.text_field :prefix, :class => 'prefix'
        %td= quantity_form.label :postfix, Quantity.human_attribute_name(:postfix)
        %td= quantity_form.text_field :postfix, :class => 'postfix'
        %td= quantity_form.label :price, Quantity.human_attribute_name(:price)
        %td= quantity_form.text_field(:price, :class => 'price')
        %td= quantity_form.label :usage, Quantity.human_attribute_name(:usage)
        %td
          %select{ :id => "article_quantities_attributes_#{ quantitynumber }_usage", :name => "article[quantities_attributes][#{ quantitynumber }][usage]" }
            %option{ :value => 'a', :selected => quantity_form.object.usage == 'a' } normal
            %option{ :value => 'b', :selected => quantity_form.object.usage == 'b' } mitnehmen
            %option{ :value => 'c', :selected => quantity_form.object.usage == 'c' } abwiegen
        %td= quantity_form.label('active', Quantity.human_attribute_name(:active))
        %td= quantity_form.check_box :active
        %td= quantity_form.label('hidden', Quantity.human_attribute_name(:hidden))
        %td= quantity_form.check_box :hidden


        - if @current_user.role > 4
          %td
            = quantity_form.label('_destroy', (t :destroy))
          %td
            = quantity_form.check_box :_destroy

  %p
    %small= add_quantity_link((t '.add_quantity'), article_form)

  %p= submit_tag( controller.action_name == 'new' ? (t :create) : (t :edit) )

%script{ :type => 'text/javascript' }== new Form.Element.Observer('article_name', 2, function(element, value) {new Ajax.Updater('articles_search_results', '/articles/find', {asynchronous:true, evalScripts:true, onLoaded:function(request){document.getElementById('spinner').style.display='none'}, onLoading:function(request){document.getElementById('spinner').style.display='inline'}, parameters:'articles_search_text=' + escape(value)})})
