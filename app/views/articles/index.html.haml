%h2= t('activerecord.models.article.other')

- if @current_user.role >= 1
  = link_to((t :new), new_article_path, :class => 'links')

= link_to((t '.list_all'), listall_articles_path, :class => 'links')

%table.articles
  %tr
    %td#drop_remove{ :colspan => 2 }
      = text_field_tag 'article_name', t('.search_term'), :onclick => 'this.value="";'
      %ul#search_results
  %tr
    - @scopes.each do |scope|
      %td{ :id => "drop_add_to_#{scope}" }
        %script{ :type => 'text/javascript' }== Droppables.add('drop_add_to_#{scope}', {hoverclass:'receiving', onDrop:function(element){new Ajax.Request('articles/change_scope', {parameters:{'scope':'#{scope}','id':element.id}})}})
        %span.scope_title= t "#{scope}_generic_name".to_sym
        = link_to t('.preview'), { :controller => scope }, :class => 'scopelink'
        %div{ :id => "#{scope}_list" }= render :partial => 'scope_list', :locals => { :scope => scope }


%script{ :type => 'text/javascript' }
  Droppables.add("drop_remove", {hoverclass:'hover', onDrop:function(element){element.remove(); new Ajax.Request('articles/change_scope', {parameters:{'scope':'remove','id':element.id}})}})

  new Form.Element.Observer('article_name', 2, function(element, value) {new Ajax.Updater('search_results', '/articles/find', {asynchronous:true, evalScripts:true, onLoaded:function(request){document.getElementById('search_spinner_').style.display='none'}, onLoading:function(request){document.getElementById('search_spinner_').style.display='inline'}, parameters:'articles_search_text=' + escape(value)})})
