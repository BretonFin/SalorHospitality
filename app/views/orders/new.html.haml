%h2= @order.id ? "#{t :order, :count => 1} ##{@order.id}, #{Table.find(@order.table_id).name}" : "#{t :new_order} #{Table.find(@order.table_id).name}"

%script{ :type => 'text/javascript' }= generate_js_variables(@categories)
%script{ :type => 'text/javascript' }= generate_js_functions

= error_messages_for 'order'

- path = controller.action_name == 'edit' ? table_order_path(@order.table_id, @order) : table_orders_path
- method = controller.action_name == 'edit' ? 'put' : 'post'

- form_for :order, @order, :url => path, :html => { :method => method, :name => 'itemform' } do |order_form|

  %p
    = order_form.label(:user_id, (t :user))
    = order_form.collection_select :user_id, User.all, :id, :login, { :include_blank => true }

  - if @current_user.role >= 10 
    %p
      = order_form.label(:created_at, (t :creation_date))
      = order_form.date_select :created_at

  %div#categories
    - @categories.each do |category|
      ==<div class='category #{ category.name.delete ' ' }' onclick='display_articles(#{ category.id });'>#{ category.name }</div>



  %div#articles



  %div#quantities



  %div#items
    - order_form.fields_for :items do |item_form|

      - nested_attribute_id = /order\[items_attributes\]\[(.*)\]/.match(item_form.object_name)[1]

      = render 'items/item', :locals => { :number => 'nested_attribute_id', :articleid => item_form.object.article_id, :itemname => item_form.object.article_id }


  .clear

  %p= submit_tag( "#{t :save}", :class => 'create_edit_order', :name => 'edit_order' )
  %p= submit_tag( "#{t :finished}", :class => 'create_edit_order', :name => 'finish_order' )
