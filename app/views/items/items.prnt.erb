<%= "\e@" %><% # Initialize Printer %>
<%= "\e!\x38" %><% # doube tall, double wide, bold %>

<% orders = order ? [order] : Order.find_all_by_finished(false) %>

      overall_output = ''
      orders.each do |o|
        per_order_output = ''
        header =
        "\e@"     +  # Initialize Printer
        "\e!\x38"    # doube tall, double wide, bold

        per_order_output +=
        "%-14.14s #%5i\n%-12.12s %8s\n" % [l(Time.now, :format => :time_short), o.nr, @current_user.login, o.table.abbreviation] +

        per_order_output += "=====================\n"

        printed_items_in_this_order = 0
        o.items.each do |i|
          i.update_attribute :printed_count, i.count if i.count < i.printed_count
          next if i.count == i.printed_count or i.count == 0

          article_quantity_usage = i.quantity ? i.quantity.usage : i.article.usage

          next if category_usage and
                  article_usage and
                  ((i.count <= i.printed_count)         or
                  (category_usage != i.category.usage) or
                  (article_usage  != article_quantity_usage))

          printed_items_in_this_order =+ 1

          per_order_output += "%i %-18.18s\n" % [ i.count - i.printed_count, i.article.name]
          per_order_output += "  %-18.18s\n" % ["#{i.quantity.prefix} #{ i.quantity.postfix}"] if i.quantity
          per_order_output += "! %-18.18s\n" % [i.comment] if i.comment and not i.comment.empty?

          i.printoptions.each do |po|
            per_order_output += "* %-18.18s\n" % [po.name]
            i.options << po
          end

          i.printoptions = []
          i.printed_count = i.count 
          i.save
        end

        footer =
        "\n\n\n\n" +
        "\x1DV\x00" + # paper cut at the end of each order/table
        "\x16\x20105"

        overall_output += header + per_order_output + footer if printed_items_in_this_order != 0
