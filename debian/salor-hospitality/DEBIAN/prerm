#!/bin/sh
# prerm script for salor-hospitality
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

export RAILS_ENV=production

app_root=/srv/salor-hospitality
backupdir_codebase=$app_root/backups/codebase

case "$1" in
    remove|upgrade|deconfigure)
      
      echo "Backing up current SALOR Hospitality codebase in compliance with FISC regulations..."
      DATE="`date +%Y%m%dT%H%M%S`"
      mkdir -p $backupdir_codebase/$DATE
      cp -r $app_root/{app,config,db,debian,doc,lib,log,public,script,spec,tmp,vendor} $backupdir_codebase/$DATE
      
      echo "Compressing SALOR Hospitality backup. This may take a little while..."
      cd $backupdir_codebase
      tar cjf $DATE.tar.bz2 $DATE
      rm -rf $DATE
      echo "Done."
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
