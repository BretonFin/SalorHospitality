#!/bin/bash
cd /etc/mysql
mycnf=/etc/mysql/my.cnf

echo -ne "Please specify the server type {master|slave}: "
read servertype

if [ "$servertype" = "master" ]; then
  if [ ! -e ca-key.pem ]; then
    echo "create a self signed (x509) root certificate"
    openssl req -newkey rsa:2048 -keyout ca-key.pem -x509 -nodes -days 6000 -subj "/C=AT/ST=/L=/O=SalorHospitality POS/CN=salor-hospitality" -out ca-crt.pem

    echo "create certificate sign request for MASTER"
    openssl req -newkey rsa:2048 -keyout master-key.pem -nodes -days 6000 -subj "/C=AT/ST=/L=/O=SalorHospitality POS/CN=salor-hospitality" -out master-req.pem
    
    echo "sign MASTER certificate sign request (outputs signed certificate)"
    openssl x509 -req -in master-req.pem -CA ca-crt.pem -CAkey ca-key.pem -set_serial 01 -out master-crt.pem
    
    echo "create certificate sign request for SLAVE"
    openssl req -newkey rsa:2048 -keyout slave-key.pem -nodes -days 6000 -subj "/C=AT/ST=/L=/O=SalorHospitality POS/CN=salor-hospitality" -out slave-req.pem
    
    echo "sign SLAVE certificate sign request (outputs signed certificate)"
    openssl x509 -req -in slave-req.pem -CA ca-crt.pem -CAkey ca-key.pem -set_serial 01 -out slave-crt.pem
    
    echo "Certificate generation done. Now copy /etc/mysql/{ca-crt, slave-key, slave-crt}.pem to /etc/mysql of SLAVE."
  else
    echo "Master keys already exist. Nothing to be done."
  fi
elif [ "$servertype" = "slave" ]; then
  if [ ! -e slave-key.pem ]; then
    echo "Copy /etc/mysql/{ca-crt, slave-key, slave-crt}.pem from MASTER to /etc/mysql of this server and run this script again."
    exit 1
  else
    echo "SLAVE keys already exist. Nothing to be done."
  fi
else
  echo "Invalid input."
  exit 1
fi

siteid=default
if [ "$2" != "" ]; then
  siteid=$2
fi

echo -ne "Please specify the MASTER IP: "
read ip_master


if [ ! -e $mycnf.orig ]; then
  echo "Backing up my.cnf before modification."
  cp $mycnf $mycnf.orig
  
  echo -ne "Please specify the replication username (default is salorreplicator): "
  read replication_username
  if [ "$replication_username" == "" ]; then replication_username="salorreplicator"; fi
  
  echo -ne "Please specify the replication password (default is xxx): "
  read replication_password
  if [ "$replication_password" == "" ]; then replication_password="xxx"; fi

  if [ "$servertype" = 'master' ]; then
  
    echo -ne "Please specify the SLAVE IP or FQDM (default is %): "
    read slave_host
    if [ "$slave_host" == "" ]; then slave_host="%"; fi

    sed -i 's/^bind-address/#bind-address/' $mycnf
    sed -i 's/#server-id.*$/server-id = 1/' $mycnf
    sed -i 's/#log_bin/log_bin/' $mycnf
    sed -i "s/#binlog_do_db.*$/binlog_do_db=${database}\\`echo -e '\n'`#binlog_do_db = include_database_name/" $mycnf
    
    sed -i "s/^#binlog_ignore_db.*$/relay-log = \/var\/lib\/mysql\/mysql-relay-bin\\`echo -e '\n'`relay-log-index = \/var\/lib\/mysql\/mysql-relay-bin.index/" $mycnf
    
    sed -i "s/# ssl-ca.*/ssl\\`echo -e '\n'`ssl-ca=\/etc\/mysql\/ca-crt.pem/" $mycnf
    sed -i "s/# ssl-cert.*$/ssl-cert=\/etc\/mysql\/master-crt.pem/" $mycnf
    sed -i "s/# ssl-key.*$/ssl-key=\/etc\/mysql\/master-key.pem/" $mycnf
    
    echo "CREATE USER '$replication_username'@'$slave_host' IDENTIFIED BY '$replication_password'; GRANT REPLICATION SLAVE ON *.* TO '$replication_username'@'$slave_host' REQUIRE SSL; FLUSH PRIVILEGES;" | mysql -u root -proot

  elif [ $servertype = 'slave' ]; then
  
    echo -ne "Please specify the MASTER IP or FQDM: "
    read master_host
    if [ "$master_host" == "" ]; then
      echo "Need master IP or FQDM. Exiting..."
      exit 1
    fi
    
    sed -i 's/#server-id.*$/server-id = 2/' $mycnf
    sed -i 's/#log_bin/log_bin/' $mycnf
    sed -i "s/#binlog_do_db.*$/binlog_do_db=${database}\\`echo -e '\n'`#binlog_do_db = include_database_name/" $mycnf
    
    sed -i "s/^#binlog_ignore_db.*$/relay-log = \/var\/lib\/mysql\/mysql-relay-bin\\`echo -e '\n'`relay-log-index = \/var\/lib\/mysql\/mysql-relay-bin.index\\`echo -e '\n'`master-host = ${master_host}\\`echo -e '\n'`master-user = ${replication_username}\\`echo -e '\n'`master-password = ${replication_password}\\`echo -e '\n'`report-host = 127.0.0.1/" $mycnf
    
    sed -i "s/# ssl-ca.*/ssl\\`echo -e '\n'`ssl-ca=\/etc\/mysql\/ca-crt.pem/" $mycnf
    sed -i "s/# ssl-cert.*$/ssl-cert=\/etc\/mysql\/slave-crt.pem/" $mycnf
    sed -i "s/# ssl-key.*$/ssl-key=\/etc\/mysql\/slave-key.pem/" $mycnf
  fi
  
  service mysql restart
  
  echo -ne "Please specify the administraive username of mysql (default is root): "
  read mysql_admin_username
  if [ "$mysql_admin_username" == "" ]; then mysql_admin_username"root"; fi
  echo -ne "Please specify the administraive password of mysql (default is root): "
  read mysql_admin_password
  if [ "$mysql_admin_password" == "" ]; then mysql_admin_password="root"; fi
  
  echo ""
  echo "Check if mysql is now SSL enabled:"
  echo ""
  echo "show variables like '%ssl%';" | mysql -u ${mysql_admin_username} -p${mysql_admin_password}
else
  echo "This script already has modified /etc/mysl/my.cnf. Not running twice. You have to manually inspect the changes."
fi

# stop slave;
# reset slave;
# start slave;