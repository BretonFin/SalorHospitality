#!/bin/bash
# postinst script for salor-hospitality
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

echo "postinst called with $1"

case "$1" in
    configure)
#       app_root=/usr/share/salor-hospitality
#       database_config_file=/etc/salor-hospitality-database.yml
#       
#       cd $app_root
# 
#       database_config_file=/etc/salor-hospitality-database.yml
#       database_config_default_file=/usr/share/salor-hospitality/config/database-production.default.yml
      
      mainuser=`ls /home | head -1`
      echo "Will run Rack application as user $mainuser"
      chown $mainuser:$mainuser $app_root/config.ru
      
#       if [[ ! -s $database_config_file ]]
#       then
#         echo "File is empty: $database_config_file. Reading database configuration from Debconf database instead..."
#         db_get salor_hospitality/enter_username
#         username=$RET
#         echo "username is $username"
#         db_get salor_hospitality/enter_password
#         password=$RET
#         echo "password is $password"
#         db_get salor_hospitality/enter_database
#         database=$RET
#         echo "database is $database"
#       
#         echo "Storing Debconf database configuration in configuration file $database_config_file"
#         cp $database_config_default_file $database_config_file
#         sed -i -e "s/^username:.*$/username: $username/" $database_config_file
#         sed -i -e "s/^password:.*$/password: $password/" $database_config_file
#         sed -i -e "s/^database:.*$/database: $database/" $database_config_file
# 
#       else
#         echo "Reading database configuration from configuration file  $database_config_file"
#         usernameline=`grep 'username:' $database_config_file | head -1`
#         username=`echo $usernameline | sed -e 's/username: //'`
#         databaseline=`grep 'database:' $database_config_file | head -1`
#         database=`echo $databaseline | sed -e 's/database: //'`
#         passwordline=`grep 'password:' $database_config_file | head -1`
#         password=`echo $passwordline | sed -e 's/password: //'`
#       fi
#       
#       export RAILS_ENV=production
#       result=`mysql -u $username -p$password -Bse 'show databases' | grep $database | wc -l`
#       if [ "$result" = "0" ]
#       then
#         echo "Database $database doesn't exist, so I'm creating it ..."
#         rake1.9.1 db:create
#         echo "Migrating salor_hospitality database ..."
#         rake1.9.1 db:migrate
#         echo "Populating database with minimal seed data ..."
#         SEED_MODE=minimal rake1.9.1 db:seed
#       else
#         echo "salor_hospitality database already exists ..."
#         echo "Migrating salor_hospitality database ..."
#         rake1.9.1 db:migrate
#       fi
      
      rm -rf $app_root/tmp/cache/assets
      
      dbc_generate_include=template:/etc/salor-hospitality-database.yml
      dbc_generate_include_args="-o template_infile=/usr/share/salor-hospitality/config/database.yml.template"

      echo "Updating vendors cache ..."
      rake1.9.1 update_vendor_cache

      echo "Changing Permissions ..."
      chown -R www-data:www-data $app_root
      chmod -R 755 $app_root
      chmod -R 777 $app_root/tmp
      chmod -R 777 $app_root/log
      chmod -R 777 $app_root/public/uploads
      chmod -R 777 $app_root/public/assets

      echo "Adding salor-hospitality to /etc/hosts if not yet there..."
      result=`cat /etc/hosts | grep 'salor-hospitality' | wc -l`
      if [ "$result" = "0" ]; then
        echo "127.0.0.1 salor-hospitality" >> /etc/hosts;
      fi

      echo "Adding pcspkr to /etc/modules if not yet there..."
      result=`cat /etc/modules | grep 'pcspkr' | wc -l`
      if [ "$result" = "0" ]; then
        echo "pcspkr" >> /etc/modules;
      fi

      echo "Restarting Apache ..."
      service apache2 restart 0>/dev/null 1>/dev/null 2>/dev/null 3>/dev/null
      echo "Restarting udev ..."
      service udev restart 0>/dev/null 1>/dev/null 2>/dev/null 3>/dev/null

      exit 0
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
