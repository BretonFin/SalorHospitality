- payment_methods = @current_vendor.payment_methods.existing
- cash_payment_method = @current_vendor.payment_methods.existing.where(:cash => true).first
- selected_payment_method_id = cash_payment_method.id.to_s if cash_payment_method

%div.invoice{ :id => "invoice_#{refund_form.id}" }
  - if @current_company.mode == 'local'
    - @current_vendor.vendor_printers.existing.each do |p|
      %a{ :onclick => "update_order_from_refund_form({id:#{refund_form.id},jsaction:'just_print',printer:#{p.id}});", :class => "iconbutton print_#{ p.print_button_filename }_button", :title => "#{ t(:print) } #{ p.name }" }
  - elsif @current_company.mode == 'saas'
    %a{ :onclick => "update_order_from_refund_form({id:#{refund_form.id},jsaction:'mark_print_pending'});", :class => 'iconbutton print_guestroom_button', :title => t(:print) }
    
  = select_tag 'payment_method_selector', options_from_collection_for_select(payment_methods, 'id', 'name', selected_payment_method_id)

  = form_for refund_form, :as => :order, :url => "/orders/refund/#{refund_form.id}", :html => { :method => :put, :id => 'refund_form' }, :remote => true do |order_form|
    %h3== #{ t(:invoice) } ##{refund_form.nr}, #{ refund_form.table.name }
    %p= l refund_form.created_at, :format => :long
    %table
      = order_form.fields_for :items, order_form.object.items.existing.positioned do |item_form|
        - item = item_form.object
        - itemnumber = /order\[items_attributes\]\[(.*)\]/.match(item_form.object_name)[1]
        - color = item.refunded ? '#FAA' : 'transparent'
        - label = item.quantity ? "#{ item.quantity.prefix } #{ item.quantity.article.name } #{ item.quantity.postfix } #{ item.comment }" : "#{ item.article.name } #{ item.comment }"
        - optionslabel = item.option_items.collect { |o| "<br>#{ o.name }" unless o.price.zero? }.join
        - label = raw "%20.20s%s" % [label, optionslabel]

        %tr{ :style => "background-color: #{color}" }
          %td.count.grey
            - if not item.refunded and @current_user.role.permissions.include? 'refund'
              = link_to item.count, edit_item_path(item), :method => 'get', :remote => true, :title => t('.do_separate_items')
            - else
              = item.count

          %td.label{ :id => "item#{item.id}" }
            - if not item.refunded and @current_user.role.permissions.include? 'refund'
              %a{ :onclick => "update_order_from_refund_form({id:#{item.id},jsaction:'do_refund',payment_method_id:$('#payment_method_selector').val()});", :title => t('.do_refund') }
                = label
            - else
              = label
          %td.total{ :style => 'text-align:right' }= number_to_currency item.sum

      %tr
        %td{ :colspan => '2'}= t :sum
        %td{ :style => 'text-align:right'}
          %b= number_to_currency refund_form.sum

      - unless refund_form.refund_sum.zero?
        %tr
          %td{ :colspan => '2'}= t :refund
          %td{ :style => 'text-align:right'}
            %b= number_to_currency refund_form.refund_sum