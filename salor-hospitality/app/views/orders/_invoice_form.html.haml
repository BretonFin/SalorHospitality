- oid = invoice_form.id
- if session[:display_tax_colors]
  - onclick_method = 'rotate_tax_item'
  - linktitle = t('.switch_tax_for_this_item')
- else
  - onclick_method = 'split_item'
  - linktitle = t('.split_this_item')
  
%div.invoice{ :id => "model_#{oid}" }
  - if @current_company.mode == 'local'
    - i = 0
    - @current_vendor.vendor_printers.existing.each do |p|
      - i += 1
      %a{:onclick => "update_order_from_invoice_form({id:#{oid},jsaction:'pay_and_print',printer:#{p.id}});", :class => "iconbutton printinvoice#{ i }_button", :title => "#{ t('.print_and_finish') } #{ p.name }"}
  - elsif @current_company.mode == 'saas'
    %a{ :onclick => "update_order_from_invoice_form({id:#{oid},jsaction:'pay_and_print_pending'});", :class => 'iconbutton print_guestroom_button', :title => t('.print_and_finish') }

  - if not invoice_form.finished
    %a{ :onclick => "update_order_from_invoice_form({id:#{oid},jsaction:'pay_and_no_print'});", :class => 'iconbutton finish_button', :title => t('.just_finish')}



  - if !invoice_form.finished
    - buttonclass = session[:display_tax_colors] ? 'splitinvoice_button' : 'tables2_button'
    - buttontitle = session[:display_tax_colors] ? t('.split_invoice') : t('.set_taxes')
    - if @current_vendor.country == 'cc' or @current_vendor.country == 'de'
      %a{ :onclick => "update_order_from_invoice_form({id:#{oid},jsaction:'display_tax_colors'});", :class => "iconbutton #{ buttonclass }", :title => '', :title => buttontitle}

    %a{ :onclick => "route('table', #{invoice_form.table.id}, 'specific_order', {order_id:#{oid}})", :class => 'iconbutton order_button', :title => t(:edit), :onmouseup => 'this.style.border = "2px solid black";' }

    %table
      %tr
        %td
          %select{ :onchange => "route('redirect', #{oid}, 'invoice_move', {target_table_id:$(this).val()});", :title => t('.move_order') }
            %option
            = options_from_collection_for_select(@tables, :id, :move_name)
        
        - if session[:display_tax_colors]
          %td
            %select{ :onchange => "update_order_from_invoice_form({id:#{oid},jsaction:'mass_assign_tax',tax_id:$(this).val()});", :title => t('.set_tax_for_all') }
              - if invoice_form.tax.nil?
                %option
              = options_from_collection_for_select(@taxes, :id, :name, (invoice_form.tax.id if invoice_form.tax))
        - elsif @current_user.role.permissions.include? 'assign_cost_center'
          %td
            %select{ :onchange => "update_order_from_invoice_form({id:#{oid},jsaction:'change_cost_center', cost_center_id:$(this).val()});", :title => t('.set_cost_center') }
              %option
              = options_from_collection_for_select(@cost_centers, :id, :name, (invoice_form.cost_center.id if invoice_form.cost_center))
        - if @current_user.role.permissions.include? 'assign_order_to_booking'
          %td
            %select#order_id{ :onchange => "update_order_from_invoice_form({id:#{oid},jsaction:'assign_to_booking', booking_id:$(this).val()});", :title => t('.set_booking') }
              %option
              = options_from_collection_for_select(@bookings, :id, :info_for_order_assignment, (invoice_form.booking.id if invoice_form.booking))

  %h3== #{ t('activerecord.models.order.one')} ##{invoice_form.nr}, #{ invoice_form.table.name }, #{ invoice_form.user.login }
  %p= l invoice_form.created_at, :format => :long
  %table.invoice
    - invoice_form.items.existing.each do |item|
      - article_label = item.article.name[0..13]
      - prefix_label = item.quantity.prefix[0..9] if item.quantity and item.quantity.prefix
      - postfix_label = item.quantity.postfix[0..9] if item.quantity and item.quantity.postfix
      - tax = @current_vendor.taxes.find_by_id(item.taxes.keys.first)
      - color = tax.color
      - letter = tax.letter
      - count_label = session[:display_tax_colors] ? letter : item.count
      
      
      %tr.item{ :id => "order_#{oid}_item_#{item.id}", :style => "background-color: #{ session[:display_tax_colors] ? color : ''}", :onclick => "#{onclick_method}(#{item.id},#{oid})" }
        %td.count{:id => "#{oid}_#{item.id}_count"}= count_label
        %td.label{ :id => "item#{item.id}"}
          - if invoice_form.finished
            == #{ prefix_label } #{ article_label } #{ item.comment }<br>#{ postfix_label }
          - else
            - label = item.quantity ? "#{ item.quantity.prefix } #{ item.quantity.article.name } #{ item.quantity.postfix } #{ item.comment }" : "#{ item.article.name } #{ item.comment }"
            - optionslabel = item.option_items.collect { |o| "<br>#{ o.name }" unless o.price.zero? }.join
            - optionsprices = item.option_items.collect { |o| "<br>#{ number_with_precision o.price, :precision => 2 }" unless o.price.zero? }.join
            - label = raw "%20.20s%s" % [label, optionslabel]
            - if @current_user.role.permissions.include? 'split_item' or session[:display_tax_colors]
              %div.invoice_item{ :title => linktitle, :id => item.id, }= raw(label)
            - else
              = raw(label)
        %td.price
          = number_with_precision item.price, :precision => 2
          = raw optionsprices
        %td.total= number_with_precision item.full_price, :precision => 2

    %tr
      %td{ :colspan => '4', :style => 'text-align:right'}
        %span.subtotal{:id => "subtotal_#{ oid }"}= number_to_currency invoice_form.sum
    %tr
      %td{ :colspan => '4', :style => 'text-align:right'}
        %span.subtotal= t '.change_money'
        %span.subtotal{:id => "change_#{ oid }" }= number_to_currency 0

  - if @current_user.role.permissions.include? ('manage_payment_methods')
    %div.add_payment_method{:onclick => "add_payment_method(#{oid});"}= t('activerecord.models.payment_method.other')
    %div{ :id => "payment_methods_container_#{oid}" }

:javascript
  submit_json.payment_method_items[#{ oid }] = {};
  submit_json.totals[#{ oid }] = {model:#{ invoice_form.sum }, payment_method_items:0 };
  if (permissions.manage_payment_methods) {
    add_payment_method(#{oid}, null, submit_json.totals[#{oid}].model);
  }