# This script doesn't work as a migration for some insane Rails-reason. Run each part manually in the console. It is limited to 5000 models at a time, due to an insane Ruby or Rake memory leak, so run the parts as often as needed until all models are processed.

# comment the following out ONLY the first time

from = Time.parse '2012-09-01 00:00:00'
to = Time.parse '2012-09-30 23:00:00'
#to = Time.now

TaxItem.where(:created_at => from..to).delete_all 
Item.where(:created_at => from..to).update_all :taxes => "--- {}\n"
Order.where(:created_at => from..to).update_all :taxes => "--- {}\n"
SurchargeItem.where(:created_at => from..to).update_all :taxes => "--- {}\n"
BookingItem.where(:created_at => from..to).update_all :taxes => "--- {}\n"
Booking.where(:created_at => from..to).update_all :taxes => "--- {}\n"



Item.existing.where(:created_at => from..to, :taxes => "--- {}\n")[0..2500].each do |item|
  item.calculate_totals
end

Order.existing.where(:created_at => from..to, :taxes => "--- {}\n")[0..1000].each do |order|
  order.calculate_totals
end

SurchargeItem.where(:taxes => "--- {}\n").existing[0..5000].each do |si|
  si.calculate_totals
end

BookingItem.where(:taxes => "--- {}\n").existing[0..5000].each do |bi|
  bi.calculate_totals
end

Booking.where(:taxes => "--- {}\n").existing[0..5000].each do |b|
  b.calculate_totals
end
----------------

Order.existing.where(:created_at => from..to).each do |order|
  order.items.update_all(:settlement_id => order.settlement_id, :cost_center_id => order.cost_center_id)
  order.tax_items.update_all(:settlement_id => order.settlement_id, :cost_center_id => order.cost_center_id)
  order.payment_method_items.update_all(:settlement_id => order.settlement_id, :cost_center_id => order.cost_center_id)
end

----------------



----------------

Settlement.all.each { |s| s.calculate_totals }

----------------

Item.connection.execute("UPDATE items SET confirmation_count = count, preparation_count = count, delivery_count = count;")

----------------