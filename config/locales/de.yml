"de":
# ==================================================================================
# Adaptiert von:
# /usr/lib/ruby/gems/1.8/gems/actionpack-2.2.1/lib/action_view/locale
# ==================================================================================
  number:
    # Used in number_with_delimiter()
    # These are also the defaults for 'currency', 'percentage', 'precision', and 'human'
    format:
      # Sets the separator between the units, for more precision (e.g. 1.0 / 2.0 == 0.5)
      separator: ","
      # Delimets thousands (e.g. 1,000,000 is a million) (always in groups of three)
      delimiter: "."
      # Number of decimals, behind the separator (the number 1 with a precision of 2 gives: 1.00)
      precision: 3

    # Used in number_to_currency()
    currency:
      format:
        # Where is the currency sign? %u is the currency unit, %n the number (default: $5.00)
        format: "%u %n"
        unit: "&euro;"
        # These three are to override number.format and are optional
        separator: ","
        delimiter: "."
        precision: 2

    # Used in number_to_percentage()
    percentage:
      format:
        # These three are to override number.format and are optional
        # separator:
        delimiter: ""
        precision: 0

    # Used in number_to_precision()
    precision:
      format:
        # These three are to override number.format and are optional
        separator: ","
        delimiter: "."
        precision: 2

    # Used in number_to_human_size()
    human:
      format:
        # These three are to override number.format and are optional
        # separator:
        delimiter: ""
        precision: 1

  # Used in distance_of_time_in_words(), distance_of_time_in_words_to_now(), time_ago_in_words()
  datetime:
    distance_in_words:
      half_a_minute: "half a minute"
      less_than_x_seconds:
        one:   "less than 1 second"
        other: "less than {{count}} seconds"
      x_seconds:
        one:   "1 second"
        other: "{{count}} seconds"
      less_than_x_minutes:
        one:   "less than a minute"
        other: "less than {{count}} minutes"
      x_minutes:
        one:   "1 minute"
        other: "{{count}} minutes"
      about_x_hours:
        one:   "about 1 hour"
        other: "about {{count}} hours"
      x_days:
        one:   "1 day"
        other: "{{count}} days"
      about_x_months:
        one:   "about 1 month"
        other: "about {{count}} months"
      x_months:
        one:   "1 month"
        other: "{{count}} months"
      about_x_years:
        one:   "about 1 year"
        other: "about {{count}} years"
      over_x_years:
        one:   "over 1 year"
        other: "over {{count}} years"

#  activerecord:
#    errors:
#      template:
#        header:
#          one:    "1 Fehler hat es verhindert, dass dieses {{model}} gespeichert wird"
#          other:  "{{count}} Fehler haben es verhindert, dass dieses {{model}} gespeichert wird"
#        # The variable :count is also available
#        body: "In folgenden Formularfeldern stimmt etwas nicht:"



# ==================================================================================
# Adaptiert von:
# /usr/lib/ruby/gems/1.8/gems/activesupport-2.2.1/lib/active_support/locale/en-US.yml
# ==================================================================================

  date:
    formats:
      # Use the strftime parameters for formats.
      # When no format has been given, it uses default.
      # You can provide other formats here if you like!
      default: "%Y-%m-%d"
      short: "%d. %b"
      long: "%d. %B  %Y"

    day_names: [Sonntag, Montag, Dienstag, Mittwoch, Donnerstag, Freitag, Samstag]
    abbr_day_names: [So, Mo, Di, Mi, Do, Fr, Sa]

    # Don't forget the nil at the beginning; there's no such thing as a 0th month
    month_names: [~, Januar, Februar, M채rz, April, Mai, Juni, Juli, August, September, Oktober, November, Dezember]
    abbr_month_names: [~, Jan, Feb, M채r, Apr, Mai, Jun, Jul, Aug, Sep, Okt, Nov, Dez]
    # Used in date_select and datime_select.
    order: [ :year, :month, :day ]

  time:
    formats:
      default: "%a, %d. %b. %Y, %H:%M:%S %z"
      short: "%d. %b. %y  %y %H:%M"
      long: "%d. %B %Y %H:%M:%S"
      datetime_iso: "%Y-%m-%d %H:%M:%S"
      date_normal: "%d. %B %Y"
      date_short: "%d. %b %y"
      date_iso: "%Y-%m-%d"
      time_short: %H:%M
    am: ""
    pm: ""

# Used in array.to_sentence.
  support:
    array:
      sentence_connector: "und"
      skip_last_comma: true

# ==================================================================================
# Adaptiert von:
# /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.1/lib/active_record/locale/en-US.yml
# ==================================================================================

  activerecord:
    errors:
      # The values :model, :attribute and :value are always available for interpolation
      # The value :count is available when applicable. Can be used for pluralization.
      #
      template:
        header:
          one:  "{{count}} Fehler hat verhindert, dass das Formular &bdquo;{{model}}&ldquo; gespeichert wird."
          other:  "{{count}} Fehler haben verhindert, dass das Formular &bdquo;{{model}}&ldquo; gespeichert wird."
        # The variable :count is also available
        body: "In folgenden Formularfeldern stimmt etwas nicht:"

      messages:
        inclusion: "ist nicht in der Liste"
        exclusion: "ist reserviert"
        invalid: "ist ung체ltig"
        confirmation: "stimmt nicht 체berein"
        accepted: "must be accepted"
        empty: "darf nicht leer sein"
        blank: "muss eingegeben werden"
        too_long: "ist zu lang (maximal {{count}} Zeichen)"
        too_short: "ist zu kurz (minimum ist {{count}} Zeichen)"
        wrong_length: "is the wrong length (should be {{count}} characters)"
        taken: "has already been taken"
        not_a_number: "ist keine Zahl"
        greater_than: "must be greater than {{count}}"
        greater_than_or_equal_to: "must be greater than or equal to {{count}}"
        equal_to: "must be equal to {{count}}"
        less_than: "must be less than {{count}}"
        less_than_or_equal_to: "must be less than or equal to {{count}}"
        odd: "must be odd"
        even: "must be even"
        # Append your own errors here or at the model/attributes scope.

      # You can define own errors for models or model attributes.
      # The values :model, :attribute and :value are always available for interpolation.
      #
      # For example,
      #   models:
      #     user:
      #       blank: "This is a custom blank message for {{model}}: {{attribute}}"
      #       attributes:
      #         login:
      #           blank: "This is a custom blank message for User login"
      # Will define custom blank validation message for User model and
      # custom blank validation message for login attribute of User model.

    # Translate model names. Used in Model.human_name().
    #models:
      # For example,
      #   user: "Dude"
      # will translate User model name to "Dude"

    # Translate model attribute names. Used in Model.human_attribute_name(attribute).
    #attributes:
      # For example,
      #   user:
      #     login: "Handle"
      # will translate User attribute "login" as "Handle"
