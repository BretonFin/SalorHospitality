#!/bin/bash

# Copyright (c) 2012 Red (E) Tools Ltd.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

. /usr/share/debconf/confmodule

export RAILS_ENV=production
export PATH=$PATH:/opt/salor/ruby/bin

echo "postinst called with $1"

echo "Reading configuration from Debconf database ..."
db_get salor_hospitality/enter_username
username=$RET
echo "username is $username"
db_get salor_hospitality/enter_password
password=$RET
echo "password is $password"
db_get salor_hospitality/enter_database
database=$RET
echo "database is $database"

cd /opt/salor/hospitality

echo "Setting username and password for salor_hospitality database ..."
cp config/database-default.yml config/database.yml
sed -i -e "s/username:.*/username: $username/" config/database.yml
sed -i -e "s/password:.*/password: $password/" config/database.yml
sed -i -e "s/database:.*/database: $database/" config/database.yml

db_get salor_hospitality/exceptions
if [ "$RET" = "true" ]
then
  echo "Changing behaviour of Exim E-Mail Server for debugging reports ..."
  sed -i -e "s/dc_eximconfig_configtype=.*$/dc_eximconfig_configtype='internet'/" /etc/exim4/update-exim4.conf.conf
  /usr/sbin/update-exim4.conf
else
  echo "Deactivating debugging reports ..."
  sed -i -e 's/config.middleware.use ExceptionNotifier/#&/' config/environments/production.rb
fi

result=$(mysql -u $username -p$password -Bse 'show databases' | grep $database)
if [ "$result" != "$database" ]
then
  echo "salor_hospitality database doesn't exist, so I'm creating it ..."
  salor_rake db:create
  echo "Migrating salor_hospitality database ..."
  salor_rake db:migrate
  echo "Populating database with minimal seed data ..."
  SEED_MODE=minimal salor_rake db:seed
  echo "Precompiling assets ..."
  salor_rake assets:precompile
  db_input high salor_hospitality/dataset || true
  db_go
  db_get salor_hospitality/dataset
  if [ "$RET" = "false" ]
  then
    echo "User selected minimal dataset. Truncating all tables except 'users' and 'roles'."
    mysql -u $username -p$password $database -Bse "truncate table articles; truncate table cost_centers; truncate table customers; truncate table options; truncate table quantities; truncate table items; truncate table orders; truncate table options; truncate table taxes; truncate table tables; truncate table categories; truncate table settlements; truncate table vendor_printers; truncate table rooms; truncate table room_prices; truncate table room_types; truncate table guest_types; truncate table surcharges; truncate table seasons; truncate table articles_taxes; truncate table categories_options; truncate table customers; truncate table guest_types_taxes; truncate table pages; truncate table pages_partials; truncate table partials; truncate table payment_methods; truncate table presentations; truncate table tables_users;"
  fi
else
  echo "salor_hospitality database already exists ..."
  echo "Migrating salor_hospitality database ..."
  salor_rake db:migrate
  echo "Precompiling assets ..."
  salor_rake assets:precompile
fi

echo "Updating vendors cache ..."
salor_rake update_vendor_cache

echo "Changing Permissions ..."
chown -R www-data:www-data /opt/salor/hospitality
chmod -R 755 /opt/salor/hospitality
chmod -R 777 /opt/salor/hospitality/tmp
chmod -R 777 /opt/salor/hospitality/log
# the following is needed to save FISC reports
mainuser=`ls /home | head -1`
echo "Changing Permissions of /home/$mainuser/Desktop..."
chmod 755 /home/$mainuser/Desktop
chown :www-data /home/$mainuser/Desktop
echo "Adding user $mainuser to group www-data..."
usermod -a -G www-data $mainuser

echo "Modifying /etc/hosts ..."
result=`cat /etc/hosts | grep -c 'localhost salor-hospitality'`
if [ $result -eq 0 ]; then
  echo "127.0.0.1 localhost salor-hospitality" >> /etc/hosts;
fi

echo "Modifying /etc/modules ..."
result=`cat /etc/modules | grep -c 'pcspkr'`
if [ $result -eq 0 ]; then
  echo "pcspkr" >> /etc/modules;
fi

echo "Testing for SALOR SSL certificates for HTTPS access..."
if [ ! -d /root/salor_ssl_certificates ]; then
  echo "SALOR SSL certificates don't exist yet, creating them..."
  cd /root
  mkdir salor_ssl_certificates
  cd salor_ssl_certificates
  openssl req -new -newkey rsa:4096 -nodes -out salor.csr -keyout salor.key -subj "/C=AT/ST=/L=/O=Salor POS/CN=salor"
  openssl req -x509 -days 6000 -in salor.csr -key salor.key -out salor.crt
  chmod 600 salor.*
  mkdir /etc/apache2/ssl
  cp salor.key salor.crt /etc/apache2/ssl
  a2enmod ssl
else
  echo "SALOR SSL certificates already exist. Nothing to be done."
fi

db_get salor_hospitality/https_port
port=$RET
echo "Writing SSL port $port to Salor Hospitality Apache configuration file."
sed -i -e "s/7652/$port/" /etc/apache2/sites-enabled/salor_hospitality_ssl


echo "Restarting Apache ..."
service apache2 restart 0>/dev/null 1>/dev/null 2>/dev/null 3>/dev/null
echo "Restarting Exim4 ..."
service exim4 restart 0>/dev/null 1>/dev/null 2>/dev/null 3>/dev/null
echo "Restarting udev ..."
service udev restart 0>/dev/null 1>/dev/null 2>/dev/null 3>/dev/null

db_input high salor_hospitality/done || true
db_go
exit 0
